CREATE TABLE
 Item (
  id SERIAL NOT NULL,
  genre_id INT,
  author_id INT,
  label_id INT,
  source_id INT,
  public_date DATE NOT NULL,
  archived BOOLEAN,
  FOREIGN KEY(genre_id) REFERENCES Genre(id),
  FOREIGN KEY(author_id) REFERENCES Author(id)
  FOREIGN KEY(label_id) REFERENCES Label(id)
  FOREIGN KEY(source_id) REFERENCES  source(id),
  PRIMARY KEY(id)
 );

 CREATE TABLE Genre(
  id SERIAL NOT NULL,
  name VARCHAR(100) NOT NULL,
  PRIMARY KEY(id)
 );


 CREATE TABLE Source(
  id SERIAL NOT NULL,
  name VARCHAR(100) NOT NULL,
  PRIMARY KEY(id)
 );

 CREATE TABLE Author(
  id SERIAL NOT NULL,
  first_name VARCHAR(100) NOT NULL,
  last_name VARCHAR(100) NOT NULL,
  PRIMARY KEY (id)
 );
-- Create a Label class table
CREATE TABLE label (
	id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  item_id INT FOREIGN KEY REFERENCES item(id),
	title TEXT,
	color TEXT
);
-- Create a Game class table
CREATE TABLE game (
  id SERIAL PRIMARY KEY ,
  item_id INT FOREIGN KEY REFERENCES item(id),
  multiplayer VARCHAR,
  last_played_at DATE,
  publish_date DATE,
);

-- Create a Music Album class table
CREATE TABLE music_album (
  id SERIAL PRIMARY KEY,
  item_id INT FOREIGN KEY REFERENCES item(id),
  on_spotify BOOLEAN,
  publish_date DATE,
  archived BOOLEAN,
);

-- Create a Book class table
CREATE TABLE book (
  id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
  item_id INT FOREIGN KEY REFERENCES item(id),
  publisher TEXT,
  cover_state TEXT,
);

  CREATE TABLE Movie(
  id INT GENERATED BY DEFAULT AS IDENTITY,
  silent BOOLEAN NOT NULL,
  publish_date DATE NOT NULL,
  source_id INT NULL,
  FOREIGN KEY (source_id) REFERENCES  source(id),
  archived BOOLEAN NOT NULL,
  PRIMARY KEY(id)
 );
